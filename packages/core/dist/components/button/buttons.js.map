{"version":3,"sources":["../src/components/button/buttons.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;AAEH,yDAAyD;AACzD,sCAAsC;AAEtC,6BAA+B;AAE/B,4CAAwD;AACxD,mDAAgE;AAIhE;IAA4B,kCAAiC;IAA7D;;IAUA,CAAC;IAPU,uBAAM,GAAb;QACI,MAAM,CAAC,CACH,iDAAQ,IAAI,EAAC,QAAQ,IAAK,0BAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAM,IAAI,CAAC,oBAAoB,EAAE,GACpF,IAAI,CAAC,cAAc,EAAE,CACjB,CACZ,CAAC;IACN,CAAC;IACL,aAAC;AAAD,CAVA,AAUC,CAV2B,+BAAc;AACxB,kBAAW,GAAG,kBAAkB,CAAC;AADtC,wBAAM;AAYN,QAAA,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAEzD;IAAkC,wCAAiC;IAAnE;;IAmBA,CAAC;IAhBU,6BAAM,GAAb;QACU,IAAA,eAAmC,EAAjC,cAAI,EAAE,gBAAY,EAAZ,iCAAY,CAAgB;QAC1C,IAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEhD,MAAM,CAAC,CACH,4CACI,IAAI,EAAC,QAAQ,IACT,0BAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,EAC9B,WAAW,IACf,IAAI,EAAE,WAAW,CAAC,QAAQ,GAAG,SAAS,GAAG,IAAI,EAC7C,QAAQ,EAAE,WAAW,CAAC,QAAQ,GAAG,SAAS,GAAG,QAAQ,KAEpD,IAAI,CAAC,cAAc,EAAE,CACtB,CACP,CAAC;IACN,CAAC;IACL,mBAAC;AAAD,CAnBA,AAmBC,CAnBiC,+BAAc;AAC9B,wBAAW,GAAG,wBAAwB,CAAC;AAD5C,oCAAY;AAqBZ,QAAA,mBAAmB,GAAG,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC","file":"buttons.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\n// HACKHACK: these components should go in separate files\n// tslint:disable max-classes-per-file\n\nimport * as React from \"react\";\n\nimport { removeNonHTMLProps } from \"../../common/props\";\nimport { AbstractButton, IButtonProps } from \"./abstractButton\";\n\nexport { IButtonProps };\n\nexport class Button extends AbstractButton<HTMLButtonElement> {\n    public static displayName = \"Blueprint.Button\";\n\n    public render() {\n        return (\n            <button type=\"button\" {...removeNonHTMLProps(this.props)} {...this.getCommonButtonProps()}>\n                {this.renderChildren()}\n            </button>\n        );\n    }\n}\n\nexport const ButtonFactory = React.createFactory(Button);\n\nexport class AnchorButton extends AbstractButton<HTMLAnchorElement> {\n    public static displayName = \"Blueprint.AnchorButton\";\n\n    public render() {\n        const { href, tabIndex = 0 } = this.props;\n        const commonProps = this.getCommonButtonProps();\n\n        return (\n            <a\n                role=\"button\"\n                {...removeNonHTMLProps(this.props)}\n                {...commonProps}\n                href={commonProps.disabled ? undefined : href}\n                tabIndex={commonProps.disabled ? undefined : tabIndex}\n            >\n                {this.renderChildren()}\n            </a>\n        );\n    }\n}\n\nexport const AnchorButtonFactory = React.createFactory(AnchorButton);\n"]}