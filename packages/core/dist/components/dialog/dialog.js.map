{"version":3,"sources":["../src/components/dialog/dialog.tsx"],"names":[],"mappings":"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","file":"dialog.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractComponent } from \"../../common/abstractComponent\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { IProps } from \"../../common/props\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { Icon, IconName } from \"../icon/icon\";\nimport { IBackdropProps, IOverlayableProps, Overlay } from \"../overlay/overlay\";\n\nexport interface IDialogProps extends IOverlayableProps, IBackdropProps, IProps {\n    /**\n     * Toggles the visibility of the overlay and its children.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * Dialog always has a backdrop so this prop is excluded from the public API.\n     * @internal\n     */\n    hasBackdrop?: boolean;\n\n    /**\n     * Name of the icon (the part after `pt-icon-`) to appear in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     */\n    iconName?: IconName;\n\n    /**\n     * Whether to show the close button in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /**\n     * CSS styles to apply to the dialog.\n     * @default {}\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Title of the dialog.\n     * If provided, a `.pt-dialog-header` element will be rendered inside the dialog\n     * before any children elements.\n     * In the next major version, this prop will be required.\n     */\n    title?: string | JSX.Element;\n\n    /**\n     * Name of the transition for internal `CSSTransitionGroup`.\n     * Providing your own name here will require defining new CSS transition properties.\n     */\n    transitionName?: string;\n}\n\nexport class Dialog extends AbstractComponent<IDialogProps, {}> {\n    public static defaultProps: IDialogProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n    };\n\n    public static displayName = \"Blueprint.Dialog\";\n\n    public render() {\n        return (\n            <Overlay {...this.props} className={Classes.OVERLAY_SCROLL_CONTAINER} hasBackdrop={true}>\n                <div className={Classes.DIALOG_CONTAINER} onMouseDown={this.handleContainerMouseDown}>\n                    <div className={classNames(Classes.DIALOG, this.props.className)} style={this.props.style}>\n                        {this.maybeRenderHeader()}\n                        {this.props.children}\n                    </div>\n                </div>\n            </Overlay>\n        );\n    }\n\n    protected validateProps(props: IDialogProps) {\n        if (props.title == null) {\n            if (props.iconName != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n            }\n            if (props.isCloseButtonShown != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n            }\n        }\n    }\n\n    private maybeRenderCloseButton() {\n        // for now, show close button if prop is undefined or null\n        // this gives us a behavior as if the default value were `true`\n        if (this.props.isCloseButtonShown !== false) {\n            const classes = classNames(Classes.DIALOG_CLOSE_BUTTON, Classes.iconClass(\"small-cross\"));\n            return <button aria-label=\"Close\" className={classes} onClick={this.props.onClose} />;\n        } else {\n            return undefined;\n        }\n    }\n\n    private maybeRenderHeader() {\n        const { iconName, title } = this.props;\n        if (title == null) {\n            return undefined;\n        }\n        return (\n            <div className={Classes.DIALOG_HEADER}>\n                <Icon iconName={iconName} iconSize={20} />\n                <h5>{title}</h5>\n                {this.maybeRenderCloseButton()}\n            </div>\n        );\n    }\n\n    private handleContainerMouseDown = (evt: React.MouseEvent<HTMLDivElement>) => {\n        // quick re-implementation of canOutsideClickClose because .pt-dialog-container covers the backdrop\n        const isClickOutsideDialog = (evt.target as HTMLElement).closest(`.${Classes.DIALOG}`) == null;\n        if (isClickOutsideDialog && this.props.canOutsideClickClose) {\n            safeInvoke(this.props.onClose, evt);\n        }\n    };\n}\n\nexport const DialogFactory = React.createFactory(Dialog);\n"]}