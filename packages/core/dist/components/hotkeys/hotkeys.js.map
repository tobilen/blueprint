{"version":3,"sources":["../src/components/hotkeys/hotkeys.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;AAEH,6BAA+B;AAE/B,uCAAyD;AACzD,8CAA8D;AAC9D,mCAAgD;AAEhD,mCAAgD;AAAvC,0BAAA,MAAM,CAAA;AACf,uCAAsD;AAA7C,8BAAA,QAAQ,CAAA;AACjB,iDAAgE;AAAvD,wCAAA,aAAa,CAAA;AACtB,+CAAwG;AAApF,sCAAA,YAAY,CAAA;AAAE,qCAAA,WAAW,CAAA;AAAE,2CAAA,iBAAiB,CAAA;AAAE,uCAAA,aAAa,CAAA;AAC/E,iDAAgG;AAAlE,4CAAA,iBAAiB,CAAA;AAAE,gDAAA,qBAAqB,CAAA;AActE;IAA6B,mCAAoC;IAAjE;;IA+CA,CAAC;IA1CU,wBAAM,GAAb;QACI,IAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,EACnB,UAAC,KAAuC,IAAK,OAAA,KAAK,CAAC,KAAK,EAAX,CAAW,CAC3D,CAAC;QAEF,oDAAoD;QACpD,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACd,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7B,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,CAAC,CAAC;YACb,CAAC;YACD,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,GAAG,IAAc,CAAC;QAC/B,IAAM,KAAK,GAAG,EAAmB,CAAC;QAClC,GAAG,CAAC,CAAiB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;YAAvB,IAAM,MAAM,gBAAA;YACb,IAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC;YAChC,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,IAAI,CACN,4BAAI,GAAG,EAAE,WAAS,KAAK,CAAC,MAAQ,EAAE,SAAS,EAAC,iBAAiB,IACxD,UAAU,CACV,CACR,CAAC;gBACF,SAAS,GAAG,UAAU,CAAC;YAC3B,CAAC;YACD,KAAK,CAAC,IAAI,CAAC,oBAAC,eAAM,qBAAC,GAAG,EAAE,KAAK,CAAC,MAAM,IAAM,MAAM,EAAI,CAAC,CAAC;SACzD;QAED,MAAM,CAAC,6BAAK,SAAS,EAAC,kBAAkB,IAAE,KAAK,CAAO,CAAC;IAC3D,CAAC;IAES,+BAAa,GAAvB,UAAwB,KAAoD;QACxE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAA,KAAK;YACxC,EAAE,CAAC,CAAC,CAAC,eAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,IAAI,KAAK,CAAC,gCAAuB,CAAC,CAAC;YAC7C,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,cAAC;AAAD,CA/CA,AA+CC,CA/C4B,0BAAiB;AAC5B,oBAAY,GAAG;IACzB,QAAQ,EAAE,CAAC;CACd,CAAC;AAHO,0BAAO","file":"hotkeys.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as React from \"react\";\n\nimport { AbstractComponent, IProps } from \"../../common\";\nimport { HOTKEYS_HOTKEY_CHILDREN } from \"../../common/errors\";\nimport { Hotkey, IHotkeyProps } from \"./hotkey\";\n\nexport { Hotkey, IHotkeyProps } from \"./hotkey\";\nexport { KeyCombo, IKeyComboProps } from \"./keyCombo\";\nexport { HotkeysTarget, IHotkeysTarget } from \"./hotkeysTarget\";\nexport { IKeyCombo, comboMatches, getKeyCombo, getKeyComboString, parseKeyCombo } from \"./hotkeyParser\";\nexport { IHotkeysDialogProps, hideHotkeysDialog, setHotkeysDialogProps } from \"./hotkeysDialog\";\n\nexport interface IHotkeysProps extends IProps {\n    /**\n     * In order to make local hotkeys work on elements that are not normally\n     * focusable, such as `<div>`s or `<span>`s, we add a `tabIndex` attribute\n     * to the hotkey target, which makes it focusable. By default, we use `0`,\n     * but you can override this value to change the tab navigation behavior\n     * of the component. You may even set this value to `null`, which will omit\n     * the `tabIndex` from the component decorated by `HotkeysTarget`.\n     */\n    tabIndex?: number;\n}\n\nexport class Hotkeys extends AbstractComponent<IHotkeysProps, {}> {\n    public static defaultProps = {\n        tabIndex: 0,\n    };\n\n    public render() {\n        const hotkeys = React.Children.map(\n            this.props.children,\n            (child: React.ReactElement<IHotkeyProps>) => child.props,\n        );\n\n        // sort by group label alphabetically, globals first\n        hotkeys.sort((a, b) => {\n            if (a.global) {\n                return b.global ? 0 : -1;\n            }\n            if (b.global) {\n                return 1;\n            }\n            return a.group.localeCompare(b.group);\n        });\n\n        let lastGroup = null as string;\n        const elems = [] as JSX.Element[];\n        for (const hotkey of hotkeys) {\n            const groupLabel = hotkey.group;\n            if (groupLabel !== lastGroup) {\n                elems.push(\n                    <h4 key={`group-${elems.length}`} className=\"pt-hotkey-group\">\n                        {groupLabel}\n                    </h4>,\n                );\n                lastGroup = groupLabel;\n            }\n            elems.push(<Hotkey key={elems.length} {...hotkey} />);\n        }\n\n        return <div className=\"pt-hotkey-column\">{elems}</div>;\n    }\n\n    protected validateProps(props: IHotkeysProps & { children: React.ReactNode }) {\n        React.Children.forEach(props.children, child => {\n            if (!Hotkey.isInstance(child)) {\n                throw new Error(HOTKEYS_HOTKEY_CHILDREN);\n            }\n        });\n    }\n}\n"]}