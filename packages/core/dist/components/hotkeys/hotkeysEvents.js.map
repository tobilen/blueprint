{"version":3,"sources":["../src/components/hotkeys/hotkeysEvents.ts"],"names":[],"mappings":"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","file":"hotkeysEvents.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport { Children, ReactElement, ReactNode } from \"react\";\nimport { safeInvoke } from \"../../common/utils\";\n\nimport { Hotkey, IHotkeyProps } from \"./hotkey\";\nimport { comboMatches, getKeyCombo, IKeyCombo, parseKeyCombo } from \"./hotkeyParser\";\nimport { IHotkeysProps } from \"./hotkeys\";\nimport { hideHotkeysDialogAfterDelay, isHotkeysDialogShowing, showHotkeysDialog } from \"./hotkeysDialog\";\n\nconst SHOW_DIALOG_KEY = \"?\";\n\nexport enum HotkeyScope {\n    LOCAL,\n    GLOBAL,\n}\n\nexport interface IHotkeyAction {\n    combo: IKeyCombo;\n    props: IHotkeyProps;\n}\n\nexport class HotkeysEvents {\n    private actions = [] as IHotkeyAction[];\n\n    public constructor(private scope: HotkeyScope) {}\n\n    public count() {\n        return this.actions.length;\n    }\n\n    public clear() {\n        this.actions = [];\n    }\n\n    public setHotkeys(props: IHotkeysProps & { children: ReactNode[] }) {\n        const actions = [] as IHotkeyAction[];\n        Children.forEach(props.children, (child: ReactElement<any>) => {\n            if (Hotkey.isInstance(child) && this.isScope(child.props)) {\n                actions.push({\n                    combo: parseKeyCombo(child.props.combo),\n                    props: child.props,\n                });\n            }\n        });\n        this.actions = actions;\n    }\n\n    public handleKeyDown = (e: KeyboardEvent) => {\n        const combo = getKeyCombo(e);\n        const isTextInput = this.isTextInput(e);\n\n        if (!isTextInput && comboMatches(parseKeyCombo(SHOW_DIALOG_KEY), combo)) {\n            if (isHotkeysDialogShowing()) {\n                hideHotkeysDialogAfterDelay();\n            } else {\n                showHotkeysDialog(this.actions.map(action => action.props));\n            }\n            return;\n        } else if (isHotkeysDialogShowing()) {\n            return;\n        }\n\n        this.invokeNamedCallbackIfComboRecognized(combo, \"onKeyDown\", e);\n    };\n\n    public handleKeyUp = (e: KeyboardEvent) => {\n        if (isHotkeysDialogShowing()) {\n            return;\n        }\n        this.invokeNamedCallbackIfComboRecognized(getKeyCombo(e), \"onKeyUp\", e);\n    };\n\n    private invokeNamedCallbackIfComboRecognized(\n        combo: IKeyCombo,\n        callbackName: \"onKeyDown\" | \"onKeyUp\",\n        e: KeyboardEvent,\n    ) {\n        const isTextInput = this.isTextInput(e);\n        for (const action of this.actions) {\n            const shouldIgnore = (isTextInput && !action.props.allowInInput) || action.props.disabled;\n            if (!shouldIgnore && comboMatches(action.combo, combo)) {\n                if (action.props.preventDefault) {\n                    e.preventDefault();\n                }\n                if (action.props.stopPropagation) {\n                    // set a flag just for unit testing. not meant to be referenced in feature work.\n                    (e as any).isPropagationStopped = true;\n                    e.stopPropagation();\n                }\n                safeInvoke(action.props[callbackName], e);\n            }\n        }\n    }\n\n    private isScope(props: IHotkeyProps) {\n        return (props.global ? HotkeyScope.GLOBAL : HotkeyScope.LOCAL) === this.scope;\n    }\n\n    private isTextInput(e: KeyboardEvent) {\n        const elem = e.target as HTMLElement;\n        // we check these cases for unit testing, but this should not happen\n        // during normal operation\n        if (elem == null || elem.closest == null) {\n            return false;\n        }\n\n        const editable = elem.closest(\"input, textarea, [contenteditable=true]\");\n\n        if (editable == null) {\n            return false;\n        }\n\n        // don't let checkboxes, switches, and radio buttons prevent hotkey behavior\n        if (editable.tagName.toLowerCase() === \"input\") {\n            const inputType = (editable as HTMLInputElement).type;\n            if (inputType === \"checkbox\" || inputType === \"radio\") {\n                return false;\n            }\n        }\n\n        // don't let read-only fields prevent hotkey behavior\n        if ((editable as HTMLInputElement).readOnly) {\n            return false;\n        }\n\n        return true;\n    }\n}\n"]}