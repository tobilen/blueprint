{"version":3,"sources":["../src/components/alert/alert.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;AAEH,uCAAyC;AACzC,6BAA+B;AAE/B,uCAA0E;AAC1E,8CAA8D;AAC9D,6CAA2C;AAC3C,2CAA0C;AAC1C,qCAA8C;AA4C9C;IAA2B,iCAAkC;IAA7D;;IAwCA,CAAC;IA/BU,sBAAM,GAAb;QACU,IAAA,eAAmG,EAAjG,sBAAQ,EAAE,wBAAS,EAAE,sBAAQ,EAAE,kBAAM,EAAE,kBAAM,EAAE,wCAAiB,EAAE,wBAAS,EAAE,gBAAK,CAAgB;QAC1G,MAAM,CAAC,CACH,oBAAC,eAAM,IAAC,SAAS,EAAE,UAAU,CAAC,gBAAO,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK;YACjF,6BAAK,SAAS,EAAE,gBAAO,CAAC,UAAU;gBAC9B,oBAAC,WAAI,IAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,SAAS,EAAC,MAAM,EAAE,eAAM,CAAC,MAAM,GAAI;gBACtE,6BAAK,SAAS,EAAE,gBAAO,CAAC,cAAc,IAAG,QAAQ,CAAO,CACtD;YACN,6BAAK,SAAS,EAAE,gBAAO,CAAC,YAAY;gBAChC,oBAAC,gBAAM,IAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,SAAS,GAAI;gBACtE,IAAI,CAAC,0BAA0B,EAAE,CAChC,CACD,CACZ,CAAC;IACN,CAAC;IAES,6BAAa,GAAvB,UAAwB,KAAkB;QACtC,EAAE,CAAC,CACC,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC;YAC1D,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,CAC7D,CAAC,CAAC,CAAC;YACC,OAAO,CAAC,IAAI,CAAC,gCAAuB,CAAC,CAAC;QAC1C,CAAC;IACL,CAAC;IAEO,0CAA0B,GAAlC;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,oBAAC,gBAAM,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAI,CAAC;QACvF,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IACL,YAAC;AAAD,CAxCA,AAwCC,CAxC0B,0BAAiB;AAC1B,kBAAY,GAAgB;IACtC,iBAAiB,EAAE,IAAI;IACvB,MAAM,EAAE,KAAK;IACb,SAAS,EAAE,IAAI;CAClB,CAAC;AAEY,iBAAW,GAAG,iBAAiB,CAAC;AAPrC,sBAAK","file":"alert.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractComponent, Classes, Intent, IProps } from \"../../common\";\nimport { ALERT_WARN_CANCEL_PROPS } from \"../../common/errors\";\nimport { Button } from \"../button/buttons\";\nimport { Dialog } from \"../dialog/dialog\";\nimport { Icon, IconName } from \"../icon/icon\";\n\nexport interface IAlertProps extends IProps {\n    /**\n     * The text for the cancel button.\n     */\n    cancelButtonText?: string;\n\n    /**\n     * The text for the confirm (right-most) button.\n     * @default \"OK\"\n     */\n    confirmButtonText?: string;\n\n    /** Name of the icon (the part after `pt-icon-`) to add next to the alert message */\n    iconName?: IconName;\n\n    /**\n     * The intent to be applied to the confirm (right-most) button.\n     */\n    intent?: Intent;\n\n    /**\n     * Toggles the visibility of the alert.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * CSS styles to apply to the alert.\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Handler invoked when the cancel button is clicked.\n     */\n    onCancel?(e: React.MouseEvent<HTMLButtonElement>): void;\n\n    /**\n     * Handler invoked when the confirm button is clicked.\n     */\n    onConfirm(e: React.MouseEvent<HTMLButtonElement>): void;\n}\n\nexport class Alert extends AbstractComponent<IAlertProps, {}> {\n    public static defaultProps: IAlertProps = {\n        confirmButtonText: \"OK\",\n        isOpen: false,\n        onConfirm: null,\n    };\n\n    public static displayName = \"Blueprint.Alert\";\n\n    public render() {\n        const { children, className, iconName, intent, isOpen, confirmButtonText, onConfirm, style } = this.props;\n        return (\n            <Dialog className={classNames(Classes.ALERT, className)} isOpen={isOpen} style={style}>\n                <div className={Classes.ALERT_BODY}>\n                    <Icon iconName={iconName} iconSize=\"inherit\" intent={Intent.DANGER} />\n                    <div className={Classes.ALERT_CONTENTS}>{children}</div>\n                </div>\n                <div className={Classes.ALERT_FOOTER}>\n                    <Button intent={intent} text={confirmButtonText} onClick={onConfirm} />\n                    {this.maybeRenderSecondaryAction()}\n                </div>\n            </Dialog>\n        );\n    }\n\n    protected validateProps(props: IAlertProps) {\n        if (\n            (props.cancelButtonText != null && props.onCancel == null) ||\n            (props.cancelButtonText == null && props.onCancel != null)\n        ) {\n            console.warn(ALERT_WARN_CANCEL_PROPS);\n        }\n    }\n\n    private maybeRenderSecondaryAction() {\n        if (this.props.cancelButtonText != null) {\n            return <Button text={this.props.cancelButtonText} onClick={this.props.onCancel} />;\n        }\n        return undefined;\n    }\n}\n"]}